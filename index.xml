<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>AGou's Blog-2</title><link>https://agou-ops.cn/myBlog-2/</link><description>关于博主</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 18 Oct 2024 09:12:26 +0800</lastBuildDate><atom:link href="https://agou-ops.cn/myBlog-2/index.xml" rel="self" type="application/rss+xml"/><item><title>解决VPS频繁Google人机验证（IP被ban）</title><link>https://agou-ops.cn/myBlog-2/post/%E8%A7%A3%E5%86%B3vps%E9%A2%91%E7%B9%81google%E4%BA%BA%E6%9C%BA%E9%AA%8C%E8%AF%81ip%E8%A2%AB%E5%A2%99/</link><pubDate>Thu, 02 Dec 2021 08:50:05 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/%E8%A7%A3%E5%86%B3vps%E9%A2%91%E7%B9%81google%E4%BA%BA%E6%9C%BA%E9%AA%8C%E8%AF%81ip%E8%A2%AB%E5%A2%99/</guid><description><![CDATA[<p>前两天入手了<code>RackNerd</code>的一台VPS，选的区域是<code>华盛顿西雅图</code>，搭建好magic上网之后，访问Google老是跳人机验证，非常频繁，用起来特别烦人（问tg群里大哥说好像除了<code>洛杉矶</code>区域外基本都跳Google人机验证），都有种想换搜索引擎的冲动。但是本着要解决问题和爱折腾的态度，还是尝试解决一下吧。</p>
<p></p>
<p>:warning: 以下部分内容来源于网络，仅做个人备份学习使用。</p>]]></description></item><item><title>使用Tailsclae VPN访问k8s集群服务（via K8s Operator）</title><link>https://agou-ops.cn/myBlog-2/post/%E4%BD%BF%E7%94%A8tailsclae-vpn%E8%AE%BF%E9%97%AEk8s%E9%9B%86%E7%BE%A4%E6%9C%8D%E5%8A%A1via-k8s-operator/</link><pubDate>Fri, 18 Oct 2024 09:12:26 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/%E4%BD%BF%E7%94%A8tailsclae-vpn%E8%AE%BF%E9%97%AEk8s%E9%9B%86%E7%BE%A4%E6%9C%8D%E5%8A%A1via-k8s-operator/</guid><description><![CDATA[<blockquote>
<p><a href="https://tailscale.com/kb/1236/kubernetes-operator" target="_blank" rel="noopener noreffer">Tailscale Kubernetes operator</a></p>
<ul>
<li>将 Kubernetes 集群中的<a href="https://kubernetes.io/docs/concepts/services-networking/service" target="_blank" rel="noopener noreffer">服务</a>公开到 Tailscale 网络（称为 tailnet）</li>
<li>通过 API 服务器代理安全连接到<a href="https://kubernetes.io/docs/concepts/overview/components/#kube-apiserver" target="_blank" rel="noopener noreffer">Kubernetes 控制平面 (kube-apiserver)</a> ，无论是否进行身份验证</li>
<li>从 Kubernetes 集群到Egress上的外部服务的出口</li>
</ul>
</blockquote>
<p>Kubernetes Operator 目前<a href="https://tailscale.com/kb/1167/release-stages#beta" target="_blank" rel="noopener noreffer">处于测试阶段</a>。</p>]]></description></item><item><title>K8s Operator之controller Tools学习笔记</title><link>https://agou-ops.cn/myBlog-2/post/k8s-operator%E4%B9%8Bcontroller-tools%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 12 Sep 2024 16:07:54 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/k8s-operator%E4%B9%8Bcontroller-tools%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description><![CDATA[<blockquote>
<p>controller-tools是一个由 Kubernetes 社区维护的项目，用于简化 Kubernetes 控制器的开发。其中提供了一组工具来生成和更新 Kubernetes API 对象的代码，以及构建自定义控制器所需的代码框架。</p>
<p>仓库地址：<a href="https://github.com/kubernetes-sigs/controller-tools" target="_blank" rel="noopener noreffer">GitHub - kubernetes-sigs/controller-tools: Tools to use with the controller-runtime libraries</a></p>
</blockquote>]]></description></item><item><title>K8s中使用traefik（基础）</title><link>https://agou-ops.cn/myBlog-2/post/k8s%E4%B8%AD%E4%BD%BF%E7%94%A8traefik/</link><pubDate>Thu, 21 Sep 2023 14:30:17 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/k8s%E4%B8%AD%E4%BD%BF%E7%94%A8traefik/</guid><description><![CDATA[<h2 id="简介">简介</h2>
<blockquote>
<p>Traefik是一个为了让部署微服务更加便捷而诞生的现代HTTP反向代理、负载均衡工具。它支持多种后台 (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Rest API, file…) 来自动化、动态的应用它的配置文件设置。</p>
</blockquote>
<p>核心概念：
当启动Traefik时，需要定义<code>entrypoints</code>，然后通过entrypoints的路由来分析传入的请求，来查看他们是否是一组规则匹配，如果匹配，则路由可能将请求通过一系列的转换过来在发送到服务上去。</p>
<ul>
<li><code>Providers</code>用来自动发现平台上的服务，可以是编排工具、容器引擎</li>
<li><code>Entrypoints</code>监听传入的流量，是网络的入口点，定义了接受请求的端口(HTTP或者TCP)</li>
<li><code>Routers</code>分析请求(host,path,headers,SSL等)，负责将传入的请求连接到可以处理这些请求的服务上去</li>
<li><code>Service</code>将请求转发给应用，负责配置如何最终将处理传入请求的实际服务</li>
<li><code>Middlewares</code>中间件，用来修改请求或者根据请求来做出判断，中间件被附件到路由上，是一种在请求发送到服务之前调整请求的一种方法</li>
</ul>]]></description></item><item><title>使用cert-manager颁发自签证书</title><link>https://agou-ops.cn/myBlog-2/post/cert-manager%E9%A2%81%E5%8F%91%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</link><pubDate>Tue, 19 Sep 2023 14:50:30 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/cert-manager%E9%A2%81%E5%8F%91%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</guid><description><![CDATA[<h2 id="cert-manager简介">cert-manager简介</h2>
<blockquote>
<p>cert-manager 是一个云原生证书管理开源项目，用于在 Kubernetes 集群中自动管理和颁发来自各种颁发源的 TLS 证书，它可以从各种受支持的来源颁发证书，包括 <a href="https://letsencrypt.org/" target="_blank" rel="noopener noreffer">Let’s Encrypt</a>、<a href="https://www.vaultproject.io/" target="_blank" rel="noopener noreffer">HashiCorp Vault</a>和<a href="https://www.venafi.com/" target="_blank" rel="noopener noreffer">Venafi</a>以及私有 PKI，它将确保证书定期有效和更新，并在到期前的适当时间尝试更新证书。</p>
</blockquote>
<h2 id="k8s集群中安装cert-manager">k8s集群中安装cert-manager</h2>
<p>参考：<a href="https://cert-manager.io/docs/installation/" target="_blank" rel="noopener noreffer">https://cert-manager.io/docs/installation/</a></p>
<p>推荐使用helm chart进行安装：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">helm repo add jetstack https://charts.jetstack.io
helm repo update
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.crds.yaml
helm install <span class="se">\
</span><span class="se"></span>  cert-manager jetstack/cert-manager <span class="se">\
</span><span class="se"></span>  --namespace cert-manager <span class="se">\
</span><span class="se"></span>  --create-namespace <span class="se">\
</span><span class="se"></span>  --version v1.13.0 <span class="se">\
</span><span class="se"></span>  <span class="c1"># --set installCRDs=true</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>K8s中部署Apollo配置中心</title><link>https://agou-ops.cn/myBlog-2/post/k8s%E4%B8%AD%E9%83%A8%E7%BD%B2apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</link><pubDate>Mon, 11 Sep 2023 14:23:18 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/k8s%E4%B8%AD%E9%83%A8%E7%BD%B2apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</guid><description><![CDATA[<h2 id="简介">简介</h2>
<blockquote>
<p>Apollo（阿波罗）是一款可靠的分布式配置管理中心，诞生于携程框架研发部，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p>
<p>Apollo支持4个维度管理Key-Value格式的配置：</p>
<ol>
<li>application (应用)</li>
<li>environment (环境)</li>
<li>cluster (集群)</li>
<li>namespace (命名空间)</li>
</ol>
<p>同时，Apollo基于开源模式开发，开源地址：https://github.com/ctripcorp/apollo</p>
</blockquote>]]></description></item><item><title>Debian12二进制安装k8s v1.25.12</title><link>https://agou-ops.cn/myBlog-2/post/k8s-debian12%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/</link><pubDate>Sun, 27 Aug 2023 10:33:38 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/k8s-debian12%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/</guid><description><![CDATA[<p>篇幅过长，为了更好的阅读体验可以前往<a href="https://docs.agou-ops.cn/docs/CloudNative/k8s/Installation/k8s%20Debian12%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85" target="_blank" rel="noopener noreffer">我的文档-k8s Debian12 二进制安装</a> 或者我的<a href="https://agou-ops.cn/myBlog-2/post/k8s-debian12%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener noreffer">备用博客地址</a> .</p>
<h2 id="一预先准备">一、预先准备</h2>
<h3 id="11-服务器角色">1.1 服务器角色</h3>
<p>环境信息：</p>
<ul>
<li>k8s版本：v1.25.12</li>
<li>Debian12(bookworm)：内核6.1.0-9-amd64</li>
</ul>
<table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
<th>组件列表</th>
</tr>
</thead>
<tbody>
<tr>
<td>master</td>
<td>172.19.82.157</td>
<td>kube-apiserver、kube-controller-manage、kube-scheduler、kubelet、kube-proxy、etcd、containerd</td>
</tr>
<tr>
<td>node01</td>
<td>172.19.82.158</td>
<td>kubelet、kube-proxy、containerd、etcd</td>
</tr>
<tr>
<td>node02</td>
<td>172.19.82.159</td>
<td>kubelet、kube-proxy、containerd、etcd</td>
</tr>
</tbody>
</table>]]></description></item><item><title>Containerd＋Harbor私有仓（https）</title><link>https://agou-ops.cn/myBlog-2/post/containerdharbor%E7%A7%81%E6%9C%89%E4%BB%93https/</link><pubDate>Sat, 17 Jun 2023 08:31:02 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/containerdharbor%E7%A7%81%E6%9C%89%E4%BB%93https/</guid><description><![CDATA[<p>看似简单，其实中间有很多坑，有时候一个小小的错误就会导致一连串的问题，故在此记录一下。</p>
<h2 id="预先准备">预先准备</h2>
<h3 id="配置harbor-https">配置Harbor https</h3>
<p>生成CA自签证书、私钥、habor证书私钥（<code>harbor.xxx.local</code>换成你自己的域名）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># CA私钥</span>
openssl genrsa -out ca.key <span class="m">4096</span>
<span class="c1"># CA证书</span>
openssl req -x509 -new -nodes -sha512 -days <span class="m">3650</span> <span class="se">\
</span><span class="se"></span> -subj <span class="s2">&#34;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harbor.xxx.local&#34;</span> <span class="se">\
</span><span class="se"></span> -key ca.key <span class="se">\
</span><span class="se"></span> -out ca.crt
<span class="c1"># 生成habor私钥</span>
openssl genrsa -out harbor.key <span class="m">4096</span>
<span class="c1"># 生成证书请求文件</span>
openssl req -sha512 -new <span class="se">\
</span><span class="se"></span>    -subj <span class="s2">&#34;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=yourdomain.com&#34;</span> <span class="se">\
</span><span class="se"></span>    -key harbor.key <span class="se">\
</span><span class="se"></span>    -out harbor.csr
<span class="c1"># 生成x509 v3格式的文件</span>
cat &gt; v3.ext <span class="s">&lt;&lt;-EOF
</span><span class="s">authorityKeyIdentifier=keyid,issuer
</span><span class="s">basicConstraints=CA:FALSE
</span><span class="s">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
</span><span class="s">extendedKeyUsage = serverAuth
</span><span class="s">subjectAltName = @alt_names
</span><span class="s">
</span><span class="s">[alt_names]
</span><span class="s">DNS.1=harbor.xxx.local
</span><span class="s">DNS.2=harbor.xxx
</span><span class="s">EOF</span>
<span class="c1"># 使用上面的文件来签署证书</span>
openssl x509 -req -sha512 -days <span class="m">3650</span> <span class="se">\
</span><span class="se"></span>    -extfile v3.ext <span class="se">\
</span><span class="se"></span>    -CA ca.crt -CAkey ca.key -CAcreateserial <span class="se">\
</span><span class="se"></span>    -in harbor.csr <span class="se">\
</span><span class="se"></span>    -out harbor.crt
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>PVE初始化相关</title><link>https://agou-ops.cn/myBlog-2/post/pve%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3/</link><pubDate>Wed, 10 May 2023 17:21:51 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/pve%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3/</guid><description><![CDATA[<h2 id="去除登录订阅弹窗">去除登录订阅弹窗</h2>
<p>备份该文件:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">cp /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js<span class="o">{</span>,.bak<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>找到以下代码，大概在<code>546</code>行:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="mi">546</span>                     <span class="k">if</span> <span class="p">(</span><span class="nx">res</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">res</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="o">!</span><span class="nx">res</span> <span class="o">||</span> <span class="nx">res</span>
<span class="mi">547</span>                         <span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span> <span class="o">!==</span> <span class="s1">&#39;active&#39;</span><span class="p">)</span> <span class="p">{</span>
</code></pre></td></tr></table>
</div>
</div><p>将以上的if条件改为false即可，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="k">if</span> <span class="p">(</span><span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
</code></pre></td></tr></table>
</div>
</div><p>修改完保存文件，重启服务：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">systemctl restart pveproxy
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>PVE制作镜像模板</title><link>https://agou-ops.cn/myBlog-2/post/pve%E5%88%B6%E4%BD%9C%E9%95%9C%E5%83%8F%E6%A8%A1%E6%9D%BF/</link><pubDate>Wed, 10 May 2023 17:21:40 +0800</pubDate><author>作者</author><guid>https://agou-ops.cn/myBlog-2/post/pve%E5%88%B6%E4%BD%9C%E9%95%9C%E5%83%8F%E6%A8%A1%E6%9D%BF/</guid><description><![CDATA[<h2 id="创建虚拟机">创建虚拟机</h2>
<p>创建虚拟机，ID和名称按照自己的喜好随便取：</p>
<p></p>
<p>需要注意的是，在选择<code>操作系统</code>这一步中，不要选择任何介质，如下图所示：</p>]]></description></item></channel></rss>